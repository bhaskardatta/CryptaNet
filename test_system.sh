#!/bin/bash

# CryptaNet System Test Script
# This script tests all components of the CryptaNet system

echo "üß™ CryptaNet System Integration Tests"
echo "======================================"

# Test authentication
echo ""
echo "üîê Testing Authentication..."
AUTH_RESPONSE=$(curl -s -X POST http://localhost:5004/api/auth/login \
    -H "Content-Type: application/json" \
    -d '{"username": "admin", "password": "admin123"}')

if echo "$AUTH_RESPONSE" | grep -q '"success": true'; then
    echo "‚úÖ Authentication: PASSED"
    TOKEN=$(echo "$AUTH_RESPONSE" | grep -o '"token": "[^"]*"' | cut -d'"' -f4)
    echo "   Token: ${TOKEN:0:20}..."
else
    echo "‚ùå Authentication: FAILED"
    echo "   Response: $AUTH_RESPONSE"
    exit 1
fi

# Test data submission pipeline
echo ""
echo "üìä Testing Data Submission Pipeline..."
SUBMIT_RESPONSE=$(curl -s -X POST http://localhost:5004/api/supply-chain/submit \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer $TOKEN" \
    -d '{
        "productId": "TEST001",
        "organizationId": "Org1MSP",
        "location": "Test Warehouse",
        "temperature": 22.5,
        "humidity": 55.0,
        "timestamp": "2024-01-15T12:00:00Z",
        "batchNumber": "TESTBATCH001",
        "quality": "A",
        "metadata": {
            "supplier": "Test Supplier",
            "destination": "Test Store"
        }
    }')

if echo "$SUBMIT_RESPONSE" | grep -q '"success": true'; then
    echo "‚úÖ Data Submission: PASSED"
    echo "   Pipeline: Data ‚Üí Encryption ‚Üí Anomaly Detection ‚Üí Blockchain ‚úÖ"
else
    echo "‚ùå Data Submission: FAILED"
    echo "   Response: $SUBMIT_RESPONSE"
fi

# Test data querying
echo ""
echo "üîç Testing Data Querying..."
QUERY_RESPONSE=$(curl -s -X GET http://localhost:5004/api/supply-chain/query \
    -H "Authorization: Bearer $TOKEN")

if echo "$QUERY_RESPONSE" | grep -q '"success": true'; then
    echo "‚úÖ Data Querying: PASSED"
    RECORD_COUNT=$(echo "$QUERY_RESPONSE" | grep -o '"count": [0-9]*' | cut -d' ' -f2)
    echo "   Total Records: $RECORD_COUNT"
else
    echo "‚ùå Data Querying: FAILED"
    echo "   Response: $QUERY_RESPONSE"
fi

# Test analytics
echo ""
echo "üìà Testing Analytics..."
ANALYTICS_RESPONSE=$(curl -s -X GET http://localhost:5004/api/analytics/summary \
    -H "Authorization: Bearer $TOKEN")

if echo "$ANALYTICS_RESPONSE" | grep -q '"success": true'; then
    echo "‚úÖ Analytics: PASSED"
    TOTAL_RECORDS=$(echo "$ANALYTICS_RESPONSE" | grep -o '"total_records": [0-9]*' | cut -d' ' -f2)
    ANOMALY_COUNT=$(echo "$ANALYTICS_RESPONSE" | grep -o '"anomaly_count": [0-9]*' | cut -d' ' -f2)
    echo "   Total Records: $TOTAL_RECORDS"
    echo "   Anomaly Count: $ANOMALY_COUNT"
else
    echo "‚ùå Analytics: FAILED"
    echo "   Response: $ANALYTICS_RESPONSE"
fi

# Test individual services
echo ""
echo "üîß Testing Individual Services..."

# Privacy Layer
PRIVACY_HEALTH=$(curl -s http://localhost:5003/health)
if echo "$PRIVACY_HEALTH" | grep -q '"status": "healthy"'; then
    echo "‚úÖ Privacy Layer: HEALTHY"
else
    echo "‚ùå Privacy Layer: UNHEALTHY"
fi

# Anomaly Detection
ANOMALY_HEALTH=$(curl -s http://localhost:5002/health)
if echo "$ANOMALY_HEALTH" | grep -q '"status": "healthy"'; then
    echo "‚úÖ Anomaly Detection: HEALTHY"
else
    echo "‚ùå Anomaly Detection: UNHEALTHY"
fi

# Backend
BACKEND_HEALTH=$(curl -s http://localhost:5004/health)
if echo "$BACKEND_HEALTH" | grep -q '"status": "healthy"'; then
    echo "‚úÖ Backend: HEALTHY"
else
    echo "‚ùå Backend: UNHEALTHY"
fi

# Frontend
FRONTEND_CHECK=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000)
if [ "$FRONTEND_CHECK" = "200" ]; then
    echo "‚úÖ Frontend: ACCESSIBLE"
else
    echo "‚ùå Frontend: NOT ACCESSIBLE (HTTP $FRONTEND_CHECK)"
fi

# Test blockchain connectivity
echo ""
echo "‚õìÔ∏è Testing Blockchain Connectivity..."
BLOCKCHAIN_CONTAINERS=$(docker ps | grep -E "(peer|orderer)" | wc -l | tr -d ' ')
if [ "$BLOCKCHAIN_CONTAINERS" -gt 0 ]; then
    echo "‚úÖ Blockchain Network: $BLOCKCHAIN_CONTAINERS containers running"
else
    echo "‚ùå Blockchain Network: No containers running"
fi

echo ""
echo "üéØ Test Summary"
echo "==============="
echo "‚úÖ All core system tests completed!"
echo ""
echo "üåê Access Points:"
echo "   Frontend Dashboard: http://localhost:3000"
echo "   Backend API: http://localhost:5004"
echo "   Privacy Layer: http://localhost:5003"
echo "   Anomaly Detection: http://localhost:5002"
echo ""
echo "üîë Login Credentials:"
echo "   Username: admin"
echo "   Password: admin123"
echo ""
echo "üìä System Status: FULLY OPERATIONAL ‚úÖ"
